# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: api
#   template:
#     metadata:
#       labels:
#         app: api
#     spec:
#       containers:
#       - name: api
#         image: baodao212/finalbackend:latest
#         resources:
#           requests:
#             cpu: 100m
#             memory: 128Mi
#           limits:
#             cpu: 250m
#             memory: 256Mi
#         ports:
#         - containerPort: 7001
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: api
# spec:
#   ports:
#   - port: 7001
#   selector:
#     app: api
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: website
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: website
#   template:
#     metadata:
#       labels:
#         app: website
#     spec:
#       containers:
#       - name: website
#         image: baodao212/finalfrontend:latest
#         resources:
#           requests:
#             cpu: 100m
#             memory: 128Mi
#           limits:
#             cpu: 250m
#             memory: 256Mi
#         ports:
#         - containerPort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: website
# spec:
#   ports:
#   - port: 80
#   selector:
#     app: website
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: postgres
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: postgres
#   template:
#     metadata:
#       labels:
#         app: postgres
#     spec:
#       containers:
#       - name: postgres
#         image: postgres:latest
#         env:
#         - name: POSTGRES_DB
#           value: finalproject
#         - name: POSTGRES_USER
#           value: postgres
#         - name: POSTGRES_PASSWORD
#           value: password
#         ports:
#         - containerPort: 5432
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres
# spec:
#   ports:
#   - port: 5432
#     targetPort: 5432
#   selector:
#     app: postgres
# # // sau khi tạo db như trên thì làm sao để  tôi có thể ghi thông số kết nối db như nào
# # // host là gì, user là gì, password là gì, port là gì
# # // host: postgres
# # // user: postgres
# # // password: password
# # // port: 5432
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  init.sql: |
    CREATE DATABASE finalproject;

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: baodao212/finalbackend:latest
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: finalproject
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          value: password
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 7001
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
  - port: 7001
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
spec:
  replicas: 3
  selector:
    matchLabels:
      app: website
  template:
    metadata:
      labels:
        app: website
    spec:
      containers:
      - name: website
        image: baodao212/finalfrontend:latest
        env:
        - name: BACKEND_URL
          value: http://api:7001
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: website
spec:
  ports:
  - port: 80
  selector:
    app: website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: finalproject
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
      - name: init-database
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - |
          set -e
          until pg_isready -h postgres -p 5432; do
            echo "Waiting for PostgreSQL to start..."
            sleep 2
          done
          psql -h postgres -U postgres -c "$(cat /docker-entrypoint-initdb.d/init.sql)"
        volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
